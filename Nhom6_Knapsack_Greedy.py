# Form implementation generated from reading ui file 'Nhom6_doan.ui'
#
# Created by: PyQt6 UI code generator 6.5.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import random
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QApplication, QMainWindow, QTableWidgetItem

class Item:
    
    def __init__(self, name, weight, value):
        self._name = name  
        self._weight = weight  
        self._value = value  

    def get_name(self):
        return self._name  

    def set_name(self, name):
        self._name = name  

    def get_weight(self):
        return self._weight  

    def set_weight(self, weight):
        self._weight = weight  

    def get_value(self):
        return self._value  

    def set_value(self, value): 
        self._value = value  

    #để tính tỷ lệ giá trị trên cân nặng của món hàng, tức là giá trị chia cho trọng lượng.+
    def unitPrice(self):
        return self._value / self._weight


class Greedy:
    # sắp sếp độ ưu tiên chọn các món hàng có unitPrice(đơn giá) giảm dần theo thuật toán Selection Sort. Mục đích là để chọn các món hàng có đơn giá cao trước.
    def sort(self, items):
        n = len(items)
        for i in range(n):
            max_idx = i
            for j in range(i+1, n):
                if items[j].unitPrice() > items[max_idx].unitPrice():
                    max_idx = j
            temp = items[i]
            items[i] = items[max_idx]
            items[max_idx] = temp

    #Phương thức này thực hiện việc chọn các món hàng để đặt vào balo với giới hạn trọng lượng capacity.
    #Nó lặp qua danh sách các món hàng đã được sắp xếp và thêm chúng vào balo cho đến khi không còn khả năng đặt thêm món hàng nào hoặc balo đầy
    def Knapsack(self, items, capacity):
        total_value = 0    # Tổng giá trị lấy được
        list_result = []    # các món hàng đã lấy

        for item in items:
            #chọn các món hàng có đơn giá cao trước
                # chọn các món hàng được ưu tiên cho đến khi đạt giới hạn
            if capacity >= item.get_weight():

                list_result.append(item)
                total_value += item.get_value()
                capacity -= item.get_weight()

        return total_value, list_result    

gd = Greedy()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(904, 696)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 0, 541, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gB_in4_Tui = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.gB_in4_Tui.setGeometry(QtCore.QRect(400, 50, 321, 71))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.gB_in4_Tui.setFont(font)
        self.gB_in4_Tui.setObjectName("gB_in4_Tui")
        self.label_2 = QtWidgets.QLabel(parent=self.gB_in4_Tui)
        self.label_2.setGeometry(QtCore.QRect(10, 30, 201, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.sB_succhua = QtWidgets.QSpinBox(parent=self.gB_in4_Tui)
        self.sB_succhua.setGeometry(QtCore.QRect(240, 30, 51, 22))
        self.sB_succhua.setObjectName("sB_succhua")
        self.btn_Tinh = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btn_Tinh.setGeometry(QtCore.QRect(400, 310, 161, 51))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btn_Tinh.setFont(font)
        self.btn_Tinh.setObjectName("btn_Tinh")
        self.groupBox_2 = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(400, 370, 501, 221))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_4 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_4.setGeometry(QtCore.QRect(10, 30, 301, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_5.setGeometry(QtCore.QRect(10, 70, 291, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.textEdit = QtWidgets.QTextEdit(parent=self.groupBox_2)
        self.textEdit.setGeometry(QtCore.QRect(310, 30, 91, 31))
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(parent=self.groupBox_2)
        self.textEdit_2.setGeometry(QtCore.QRect(310, 70, 171, 131))
        self.textEdit_2.setObjectName("textEdit_2")
        self.btn_Them = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btn_Them.setGeometry(QtCore.QRect(740, 140, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btn_Them.setFont(font)
        self.btn_Them.setObjectName("btn_Them")
        self.groupBox_3 = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.groupBox_3.setGeometry(QtCore.QRect(410, 140, 311, 161))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setObjectName("groupBox_3")
        self.label_6 = QtWidgets.QLabel(parent=self.groupBox_3)
        self.label_6.setGeometry(QtCore.QRect(10, 110, 161, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(parent=self.groupBox_3)
        self.label_7.setGeometry(QtCore.QRect(10, 70, 151, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(parent=self.groupBox_3)
        self.label_8.setGeometry(QtCore.QRect(10, 30, 51, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.txt_Name = QtWidgets.QLineEdit(parent=self.groupBox_3)
        self.txt_Name.setGeometry(QtCore.QRect(70, 30, 221, 31))
        self.txt_Name.setObjectName("txt_Name")
        self.sB_trongluong = QtWidgets.QSpinBox(parent=self.groupBox_3)
        self.sB_trongluong.setGeometry(QtCore.QRect(241, 80, 51, 22))
        self.sB_trongluong.setObjectName("sB_trongluong")
        self.sB_giatri = QtWidgets.QSpinBox(parent=self.groupBox_3)
        self.sB_giatri.setGeometry(QtCore.QRect(241, 120, 51, 22))
        self.sB_giatri.setObjectName("sB_giatri")
        self.tableWidget = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(15, 51, 371, 541))
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setRowCount(0)
        self.btn_Random = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btn_Random.setGeometry(QtCore.QRect(740, 180, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btn_Random.setFont(font)
        self.btn_Random.setObjectName("btn_Random")
        self.btn_Clear = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btn_Clear.setGeometry(QtCore.QRect(740, 220, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btn_Clear.setFont(font)
        self.btn_Clear.setObjectName("btn_Clear")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 904, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.btn_Clear.clicked.connect(self.clear)
        self.btn_Random.clicked.connect(self.randomm)
        self.btn_Them.clicked.connect(self.them)
        self.btn_Tinh.clicked.connect(self.tinh)
        self.tableWidget.itemDoubleClicked.connect(self.xoa_dong)
        # Đặt tiêu đề cho từng cột
        self.tableWidget.setHorizontalHeaderItem(0, QTableWidgetItem("Tên Món Hàng"))
        self.tableWidget.setHorizontalHeaderItem(1, QTableWidgetItem("Trọng Lượng"))
        self.tableWidget.setHorizontalHeaderItem(2, QTableWidgetItem("Giá Trị"))


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Nhóm 6 - Giải bài toán cái túi"))
        self.label.setText(_translate("MainWindow", "Giải bài toán cái túi (knapsack problem) bằng Greedy Best First Search"))
        self.gB_in4_Tui.setTitle(_translate("MainWindow", "Thông tin của túi"))
        self.label_2.setText(_translate("MainWindow", "Sức chứa của tối đa của túi"))
        self.btn_Tinh.setText(_translate("MainWindow", "Tính Toán"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Kết quả"))
        self.label_4.setText(_translate("MainWindow", "Tổng số lượng các món hàng đã chọn:"))
        self.label_5.setText(_translate("MainWindow", " Danh sách các món hàng đã chọn:"))
        self.btn_Them.setText(_translate("MainWindow", "Thêm món hàng"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Thông tin của món hàng"))
        self.label_6.setText(_translate("MainWindow", "Số lượng:"))
        self.label_7.setText(_translate("MainWindow", "Trọng lượng:"))
        self.label_8.setText(_translate("MainWindow", "Tên:"))
        self.btn_Random.setText(_translate("MainWindow", "Random"))
        self.btn_Clear.setText(_translate("MainWindow", "Clear"))
    def clear(self):
        self.txt_Name.clear()
        self.sB_giatri.setValue(0)
        self.sB_trongluong.setValue(0)
    def randomm(self):
        random_trongluong = random.randint(1, 50)  # Sinh số ngẫu nhiên từ 0 đến 100 (hoặc giới hạn khác nếu cần)
        random_giatri = random.randint(1, 50)    # Sinh số ngẫu nhiên từ 0 đến 1000 (hoặc giới hạn khác nếu cần)
        self.sB_trongluong.setValue(random_trongluong)
        self.sB_giatri.setValue(random_giatri)
    def them(self):
        trongluong = self.sB_trongluong.value()
        giatri = self.sB_giatri.value()
        if self.txt_Name.text() == "":
            canhbao = QtWidgets.QMessageBox()
            canhbao.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            canhbao.setText("Cảnh báo: Tên món hàng không được để trống.")
            canhbao.setWindowTitle("Cảnh báo")
            canhbao.exec()
            return
        if trongluong == 0:
            canhbao = QtWidgets.QMessageBox()
            canhbao.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            canhbao.setText("Cảnh báo: Trọng lượng không được để trống (bằng 0).")
            canhbao.setWindowTitle("Cảnh báo")
            canhbao.exec()
            return  # Không thêm dữ liệu nếu điều kiện không hợp lệ

        if giatri == 0:
            canhbao = QtWidgets.QMessageBox()
            canhbao.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            canhbao.setText("Cảnh báo: Giá trị không được để trống (bằng 0).")
            canhbao.setWindowTitle("Cảnh báo")
            canhbao.exec()
            return  # Không thêm dữ liệu nếu điều kiện không hợp lệ

        name = self.txt_Name.text()

    # Thêm dòng mới vào bảng
        row_position = self.tableWidget.rowCount()
        self.tableWidget.insertRow(row_position)

    # Điền thông tin vào các cột tương ứng
        self.tableWidget.setItem(row_position, 0, QTableWidgetItem(name))
        self.tableWidget.setItem(row_position, 1, QTableWidgetItem(str(trongluong)))
        self.tableWidget.setItem(row_position, 2, QTableWidgetItem(str(giatri)))
    
    def tinh(self):
        items = []  # Danh sách các món hàng
        

        if(self.sB_succhua.value() == 0):
            canhbao = QtWidgets.QMessageBox()
            canhbao.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            canhbao.setText("Cảnh báo: Sức chứa không được để trống (bằng 0).")
            canhbao.setWindowTitle("Cảnh báo")
            canhbao.exec()
            return
            
        capacity = self.sB_succhua.value()  # Sức chứa của túi

        # Lấy dữ liệu từ tableWidget và tạo đối tượng Item
        for row in range(self.tableWidget.rowCount()):
            name = self.tableWidget.item(row, 0).text()
            value = int(self.tableWidget.item(row, 2).text())
            weight = int(self.tableWidget.item(row, 1).text())
            item = Item(name, weight, value)
            items.append(item)
          # Sắp xếp các món hàng theo đơn giá giảm dần
        gd.sort(items)

        # Tính toán Knapsack
        total_value, select_items = gd.Knapsack(items, capacity)
        # Cập nhật giá trị lên giao diện
        self.textEdit.setText(str(total_value))
        # Cập nhật giá trị total_value lên giao diện
        #selected_items_text = "\n".join([f"{item.get_name()}" for item in select_items])
        item_number = 1

        # Tạo chuỗi kết quả
        selected_items_text = "\n".join([f"{item_number}. {item.get_name()}" for item_number, item in enumerate(select_items, start=1)])
        self.textEdit_2.setPlainText(selected_items_text)
        
    def xoa_dong(self, item):
        # Xác định dòng đã double click
        row = item.row()

        # Hiển thị hộp thoại xác nhận Yes/No
        xac_nhan = QtWidgets.QMessageBox.question(
            self.centralwidget,
            "Xác nhận xóa",
            "Bạn có chắc muốn xóa dữ liệu dòng này?",
            QtWidgets.QMessageBox.StandardButton.Yes | QtWidgets.QMessageBox.StandardButton.No,
        )

        if xac_nhan == QtWidgets.QMessageBox.StandardButton.Yes:
            self.tableWidget.removeRow(row)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
